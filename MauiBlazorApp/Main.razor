﻿@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims
<Router AppAssembly="@typeof(Main).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <CascadingAuthenticationState>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </CascadingAuthenticationState>
    </NotFound>
</Router>


@code {
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }

    private async Task LogUserAuthenticationState()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity!.IsAuthenticated)
        {
            Console.WriteLine($"User {user.Identity.Name} is authenticated.");
            
            // Access the "name" and "surname" claims
            var nameClaim = user.FindFirst(ClaimTypes.Name)?.Value;
            var surnameClaim = user.FindFirst(ClaimTypes.Surname)?.Value;

            if (!string.IsNullOrEmpty(nameClaim) && !string.IsNullOrEmpty(surnameClaim))
            {
                Console.WriteLine($"User's Name: {nameClaim}, Surname: {surnameClaim}");
            }
        }
        else
        {
            Console.WriteLine("User is NOT authenticated.");
        }
    }
}