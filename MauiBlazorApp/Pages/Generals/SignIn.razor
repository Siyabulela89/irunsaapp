@page "/pages/sign-in"
@using irunsaapp.Models;
@using irunsaapp.Services;
﻿@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
<MudPaper Elevation="3" Height="150" Class="px-4 mx-n4 mt-n10 pt-10 mud-theme-primary" Style="border-radius: 0px 0px 45px 45px;" Outlined="false">
    <MudPaper Elevation="0" Class="py-6" Style="background-color: transparent">

    </MudPaper>
</MudPaper>

<MudGrid Class="mt-n15 pt-0">
    <MudItem xs="12">
        <MudCard Elevation="1" Class="rounded-lg py-1">
                <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            
            <MudCardContent>
                <MudText Color="Color.Default" Typo="Typo.h6" Style="font-weight: 600;">Sign In</MudText>
                <MudText Class="mb-5" Typo="Typo.body2">Login in to your admin dashboard</MudText>
                 
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                  
                    @if (ShowErrors)
                    {
                       
                        <div class="alert alert-danger" role="alert">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                                <p>@Error</p>
                            
                        </div>
                    }
                <MudTextField Class="mt-3" T="string" Label="Email" Id="email" @bind-Value="loginModel.Email" Variant=" Variant.Filled" Margin="Margin.Dense"
                              AdornmentColor="Color.Primary" InputType="InputType.Email" Adornment="Adornment.Start" AdornmentIcon="@Icons.TwoTone.AccountCircle" />
                <ValidationMessage For="@(() => loginModel.Email)" />
                <MudTextField Class="mt-3" Label="Password" Id="password" InputType="InputType.Password"  @bind-Value="loginModel.Password" Variant="Variant.Filled" Margin="Margin.Dense"
                              T="string" AdornmentColor="Color.Primary" Adornment="Adornment.Start" AdornmentIcon="@Icons.TwoTone.Lock" />

                    <ValidationMessage For="@(() => loginModel.Password)" />
                <MudButton Class="my-4 py-2 rounded-lg" Color="Color.Tertiary" ButtonType="ButtonType.Submit" FullWidth="true" Variant="Variant.Filled"> Login </MudButton>

                <MudDivider Class="my-3"></MudDivider>
                <MudText Align="Align.Center" Typo="Typo.body2"> Or </MudText>
@*                <MudButton Class="my-1 py-2 rounded-lg" Color="Color.Primary" DisableElevation FullWidth="true" StartIcon="fab fa-facebook" Variant="Variant.Filled"> Login with Facebook </MudButton>
                <MudButton Class="my-1 py-2 rounded-lg" Color="Color.Error" DisableElevation FullWidth="true" StartIcon="fab fa-google" Variant="Variant.Filled"> Login with Google </MudButton>
                <MudButton Class="my-1 py-2 rounded-lg" Color="Color.Default" DisableElevation FullWidth="true" StartIcon="fab fa-apple" Variant="Variant.Filled"> Login with Apple </MudButton>*@

                <MudDivider Class="my-3"></MudDivider>

                <div class="d-flex justify-space-between">
                    <MudLink Href="/pages/sign-up" Typo="Typo.body2">Create Account</MudLink>
                    <MudLink Href="/pages/forgot-password" Typo="Typo.body2">Forgot Password?</MudLink>
                </div>
            </MudCardContent>
            </EditForm>
        </MudCard>
    </MudItem>
</MudGrid>
@code {
    private LoginModel loginModel = new LoginModel();

    private bool ShowErrors;
    private string Error = "";

    private async Task HandleLogin()
    {
        ShowErrors = false;

        try
        {
            var result = await AuthService.Login(loginModel);

            if (result.Successful)
            {
                if (result.HasRoles)
                {
                    NavigationManager.NavigateTo("/");
                }
                else
                {
                    NavigationManager.NavigateTo("/RegCat");
                }
            }
            else
            {
                Error = result.Error!;
                ShowErrors = true;
            }
        }
        catch (Exception ex)
        {
            // Handle the exception (log, display error, etc.)
            Error = "An error occurred during login.";
            ShowErrors = true;
        }
    }
}